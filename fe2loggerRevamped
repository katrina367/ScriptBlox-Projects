local WebhookColor = 0x8800ff

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local PS = game:GetService("PathfindingService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService('Workspace')

local plr = Players.LocalPlayer

local Amounts_Path = plr.PlayerGui.MenuGui.Goals.Window.Content.Pages.LastGame.RewardBar.Content
local GEM_PATH = Amounts_Path.GemAward.Amount
local COIN_PATH = Amounts_Path.CoinAward.Amount
local XP_PATH = plr.PlayerGui.MenuGui.Goals.Window.Content.Pages.LastGame.RewardBar.XpAmount
local ESCAPED_PATH = Amounts_Path.MapsEscaped.Amount

local GEMS = 0
local COINS = 0
local XP = 0
local ESCAPED = 0

local Door = game.Workspace.Lobby.PlayHere


local function SendHttpsRequest(body)
    if DiscordWebhook ~= false then
        http.request {
            Url = DiscordWebhook;
            Method = 'POST';
            Headers = {
                ['Content-Type'] = 'application/json';
            };
            Body = HttpService:JSONEncode(body)
        }
    end
end

local function SendHttpsStats()
    GEMS += tonumber(GEM_PATH.Text)
    COINS += tonumber(COIN_PATH.Text)
    XP += string.gsub(XP_PATH.Text, "XP", "", 1)
    ESCAPED += tonumber(ESCAPED_PATH.Text)

	SendHttpsRequest({
        ['username'] = plr.Name;
        ['content'] = "" ;
        ['embeds'] = {{
            ['title'] = plr.DisplayName .. " has died:";
            ['description'] = "";
            ['thumbnail'] = {
                ['url'] = 'https://images-ext-2.discordapp.net/external/L5bbIIPtqxKWOBJTKwYsuqyNiQqRCXsi4Z9S8NQJs9c/https/art.pixilart.com/74d4efb5bf1d7d2.png?width=671&height=671'
            };
            ['color'] = WebhookColor;
            ['fields'] = {
                {
                    ['name'] = 'Currencies gained';
                    ['value'] = '<:FloodGem:406580588137545748> ' .. GEM_PATH.Text .. '\n' .. '<:CoinF:749410094780776548> ' .. COIN_PATH.Text .. '\n' .. '<:Xp:940396948337332274> ' .. XP_PATH.Text .. '\n' .. '<:FloodExit:1092190384051978400> ' .. ESCAPED_PATH.Text;
                    ['inline'] = false;
                };
                {
                    ['name'] = 'Currencies gained in this session';
                    ['value'] = '<:FloodGem:406580588137545748> ' .. GEMS .. '\n' .. '<:CoinF:749410094780776548> ' .. COINS .. '\n' .. '<:Xp:940396948337332274> ' .. XP .. '\n' .. '<:FloodExit:1092190384051978400> ' .. ESCAPED;
                    ['inline'] = false;
                };
            };
        }}
    })
end

plr.CharacterAdded:Connect(function(char)
    task.wait(3)
	local path = PS:CreatePath()
	local p = path:ComputeAsync(char.HumanoidRootPart.Position, Door.Position)
	local waypoints = path:GetWaypoints()
	for i, v in ipairs(waypoints) do
		char.Humanoid:MoveTo(v.Position)
		char.Humanoid.MoveToFinished:Wait()
	end
	char.HumanoidRootPart.CFrame = Door.CFrame * CFrame.new(0,0,2)
    SendHttpsStats()
end)

loadstring(game:HttpGetAsync"https://raw.githubusercontent.com/ImMejor35/Flood-GUI/main/loader.lua")"main"

local FoundEscapee = false
local FoundPage = false

local function FindCollectibles(map)
    map.ChildAdded:Connect(function(child)
        if child.Name == "_Rescue" then
            FoundEscapee = true
            task.wait(4)
            repeat plr.Character:SetPrimaryPartCFrame(Workspace.Multiplayer.Map:FindFirstChild("_Rescue").Contact.CFrame)
                task.wait(2)
            until not Workspace.Multiplayer.Map:FindFirstChild("_Rescue"):FindFirstChild("Contact")
            
            SendHttpsRequest({
                ['username'] = plr.Name;
                ['content'] = "" ;
                ['embeds'] = {{
                    ['title'] = 'üèä‚Äç‚ôÇÔ∏è | Escapee Obtained!';
                    ['description'] = '';
                    ['color'] = WebhookColor;
                }}
            })
        elseif child.Name == "_LostPage" then
            FoundPage = true 
            task.wait(4)
            
            repeat plr.Character:SetPrimaryPartCFrame(Workspace.Multiplayer.Map:FindFirstChild("_LostPage").CFrame)
                task.wait(2)
            until not Workspace.Multiplayer.Map:FindFirstChild("_LostPage")
            
            SendHttpsRequest({
                ['username'] = plr.Name;
                ['content'] = "" ;
                ['embeds'] = {{
                    ['title'] = 'üìî | Lost Page Obtained!';
                    ['description'] = '';
                    ['color'] = WebhookColor;
                }}
            })
        end
    end)
end

local function SendNewMapInfo(map)
    coroutine.wrap(FindCollectibles)(map)
	task.wait(4)
    local Settings = Workspace.Multiplayer.Map.Settings
    local MapName = Settings.MapName.Value
    local Mirrored = false
    local FindMirrorObject = Settings:FindFirstChild("_MirrorMap")
    
    if FindMirrorObject then print("found mirrored object") if FindMirrorObject.Value ~= nil then Mirrored = true end end

    task.wait(3)

	SendHttpsRequest({
        ['username'] = plr.Name;
        ['content'] = "" ;
        ['embeds'] = {{
            ['title'] = 'Now Playing: ' .. MapName;
            ['description'] = '';
            ['thumbnail'] = {
                ['url'] = 'https://images-ext-2.discordapp.net/external/L5bbIIPtqxKWOBJTKwYsuqyNiQqRCXsi4Z9S8NQJs9c/https/art.pixilart.com/74d4efb5bf1d7d2.png?width=671&height=671'
            };
            ['color'] = WebhookColor;
            ['fields'] = {
                {
                    ['name'] = 'Map Stats';
                    ['value'] = '‚≠ê Difficulty | ' .. Settings.Difficulty.Value .. '\n' .. 'ü™û Mirrored | ' .. tostring(Mirrored) .. '\n' ..  'üèä‚Äç‚ôÇÔ∏è Escapee | ' .. tostring(FoundEscapee) .. '\n' .. 'üìî Lost Page | ' .. tostring(FoundPage) .. '\n' .. 'üèõÔ∏è Part Count | ' .. Settings.AssetCount.Value;
                    ['inline'] = false;
                };
            };
        }}
    })
    task.wait(1)
    FoundEscapee, FoundPage = false,false
end

Workspace.Multiplayer.ChildAdded:Connect(SendNewMapInfo)
